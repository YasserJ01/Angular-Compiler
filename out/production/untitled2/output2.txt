Program{
SourceElements{
[Statement{
ImportStatement{
import
ImportFromBlock{
ImportModuleItems
{importAliasName=[
ModuleExportName
IdentifierName{
identifier='Component'
}
}
}
},
ModuleExportName
IdentifierName{
identifier='Input'
}
}
}
}]
}
ImportFrom
{StringLiteral=''@angular/core'
}}
}
}, Statement{
ImportStatement{
import
ImportFromBlock{
ImportModuleItems
{importAliasName=[
ModuleExportName
IdentifierName{
identifier='Product'
}
}
}
}]
}
ImportFrom
{StringLiteral=''../app.component'
}}
}
}, Statement{
ClassDeclaration{
decoratorList=
decorator=[
decoratorMemberExpression=null
, decoratorCallExpression=
decoratorMemberExpression=
identifier='Component'
}
}
Arguments{
ArgumentList{
[Argument{
SingleExpression{

ObjectLiteral{
[PropertyAssignment{
PropertyName{
IdentifierName{
Identifier{Selector='selector
}
}
}
[SingleExpression{

Literal{
, stringLiteral=''app-product-details'
}
}]
}, PropertyAssignment{
PropertyName{
IdentifierName{
identifier='template'
}
}
}
[SingleExpression{

HtmlElement{
HtmlTagStartName{
HtmlTagName{
Identifier='div'
}
}
[HtmlAttribute{
null
class
HtmlAttributeValue{stringLiteral='"product-details"
}
}, HtmlAttribute{
HtmlAttributeName{
AngularDirective='*ngIf'
}
null
HtmlAttributeValue{stringLiteral='"item"
}
}]
HtmlContent{
[HtmlElement{
HtmlTagStartName{
HtmlTagName{
Identifier='h1'
}
}
[]
HtmlContent{
[]
[InterpolationExpression{
{{HtmlSequence{
PropertyName{
IdentifierName{
identifier='item'
}
}
}IdentifierName{
identifier='name'
}
}
}}}
}]
}
HtmlTagClosingName{
HtmlTagName{
Identifier='h1'
}}
}, HtmlElement{
HtmlTagStartName{
HtmlTagName{
Identifier='img'
}
}
[HtmlAttribute{
HtmlAttributeName{
Identifiers=[src]
}
null
HtmlAttributeValue{stringLiteral='"item.imgSrc"
}
}]
HtmlContent{
[HtmlElement{
HtmlTagStartName{
HtmlTagName{
Identifier='p'
}
}
[]
HtmlContent{
[]
[InterpolationExpression{
{{HtmlSequence{
PropertyName{
IdentifierName{
identifier='item'
}
}
}IdentifierName{
identifier='price'
}
}
}}}
}]
}
HtmlTagClosingName{
HtmlTagName{
Identifier='p'
}}
}, HtmlElement{
HtmlTagName{
Identifier='p'
}
[]
}]
[]
}
HtmlTagClosingName{
HtmlTagName{
Identifier='p'
}}
}]
[]
}
HtmlTagClosingName{
HtmlTagName{
Identifier='div'
}}
}
}]
}]
}
}}]}}
}
}]
}
, Export='export
, Class='class
, identifier=identifier='ProductDetailsComponent'
}
ClassHeritage{}
ClassTail{
[ClassElement{
Statement{
ExpressionStatement{
ExpressionSequence{
[SingleExpression{
New=null
SingleExpression{
IdentifierName{
identifier='Input'
}
}
null
}
, arguments=
}]
}
}
}
}, ClassElement{
Statement{
VariableStatement{
VariableDeclarationList{
[VariableDeclaration{
IdentifierOrKeyWord{
identifier='item'
}
}
null
null
TypeAnnotation{
Type_{
UnionOrIntersectionOrPrimaryType{
PrimaryType{
TypeReference{typeName=TypeName{identifier=identifier='Product'
}}}
}
}
}
}
[SingleExpression{
IdentifierName{
Identifier{undefined='undefined
}
}
null
}]
null
null
, as='null
}]
}
}
}
}]
}
}
}]
}
}